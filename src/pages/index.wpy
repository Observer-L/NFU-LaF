<style lang="less">
  @import "../style/custom";
  .header {
    display: flex;
    margin: 18rpx 0;
    align-items: center;
    z-index: 10;

    .search {
      flex: 1;
    }

    .menu, .filter {
      width: 72rpx;
      text-align: center;
      transition: width .2s ease-in-out;
      &.hide {
        width: 0;
      }
    }
  }

  .map {
    .action-btn {
      position: absolute;
      right: 0;
      bottom: 0;
      margin: 8rpx;
      color: #fff;

      .options {
        transform: translateY(250rpx);
        transition: transform .2s ease;
        transform-origin: bottom;
        text-align: center;

        &.show {
          transform: translateY(0);
        }

        .option {
          background: rgba(0, 0, 0, .7);
          padding: 10px;
        }
      }

      .toggle-btn {
        width:160rpx;
        height:60rpx;
        line-height:60rpx;
        text-align: center;
        background: rgba(0, 0, 0, 1);
      }
    }
    .filter {
      position:absolute;
      right:0;
      top:0;
      padding: 0 20rpx 20rpx 20rpx;
      background:#f8f8f8;
      color: #fff;
      transition: transform .2s ease-out;
      transform: translateX(150rpx);
      z-index: 1;
      &.active {
        transform: translateX(0);
      }
      .lost, .found {
        padding: 8rpx;
        font-size: 14px;
        text-align: center;
        background: rgba(0,0,0,.2);
        color: #000;
        transition: all .2s ease;
        &.selected {
          color: #fff;
        }
      }
      .lost {
        &.selected {
          background: @lostColor;
        }
        margin-bottom: 8rpx;
      }
      .found {
        &.selected {
          background: @foundColor;
        }
      }
    }
    .mask {
      display: none;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,.5);
      z-index: 50;
    }
  }

  .card-wrapper {
    padding: 20rpx;
  }

  .search-tabs {
    .scroll-labels {
      background: #fff;
      border-bottom: 2px solid #eee;
    }
    .inner-tabs {
      display: flex;
      justify-content: space-around;
      font-size: 14px;
      padding: 20rpx;
      box-sizing: border-box;
    }
    label {
      padding: 0 12px;
      &.active {
        color: tomato;
      }
    }
  }
  .search_results {
    .item {
    }
    .lost {
      color: @lostColor;
    }
    .found {
      color: @foundColor;
    }
  }

  .nomore {
    padding: 32rpx;
    color: #d8d8d8;
    text-align: center;
  }
</style>
<template>
  <view>
    <view class="header">

      <i class="iconfont icon-menu menu {{showSearchSection ? 'hide' : ''}}" @tap="handleToggleLeftMenu"></i>

      <van-search
        value="{{ searchKeywords }}"
        placeholder="物品关键词/丢失区域..."
        class="search"
        use-action-slot="{{!!showSearchSection}}"
        @focus="showSearchSection"
        @change="handleSearchInput"
      >
        <view slot="action" @tap="handleSearchCancel">取消</view>
      </van-search>

      <i
        class="iconfont filter {{showMapFilter ? 'icon-close' : 'icon-filter-fill'}} {{showSearchSection ? 'hide' : ''}}"
        @tap="handleToggleMapFilter"></i>
    </view>

    <van-transition show="{{ !showSearchSection }}" custom-class="fade-down">
      <view class="map" style="{{showLeftMenu ? 'margin-left: 50%' : ''}}">
        <map
          id="map"
          longitude="113.679121"
          latitude="23.632366"
          scale="16"
          show-location
          enable-rotate="{{true}}"
          enable-3D="{{true}}"
          markers="{{markers}}"
          @markertap="handleMarkerTap"
          @tap="handleMapTap"
          style="width: 100%; height: 680rpx;"
        >
          <cover-view class="action-btn">
            <cover-view class="options {{isActive ? 'show' : ''}}">
              <cover-view class="option lost" id="lost" @tap="handleClickAction">失物</cover-view>
              <cover-view class="option found" id="found" @tap="handleClickAction">拾物</cover-view>
            </cover-view>
            <cover-view class="toggle-btn" @tap="handleToggleAction">
              {{isActive ? 'x' : '+'}}
            </cover-view>
          </cover-view>

          <cover-view class="filter {{showMapFilter ? 'active' : ''}}" @tap="toggleSelectedFilter">
            <cover-view class="lost {{selectedFilter.lost ? 'selected' : ''}}" id="lost">LOST</cover-view>
            <cover-view class="found {{selectedFilter.found ? 'selected' : ''}}" id="found">FOUND</cover-view>
          </cover-view>

          <cover-view class="mask" style="{{showLeftMenu ? 'display: block;' : ''}}"
                      @tap="handleToggleLeftMenu"></cover-view>

        </map>
      </view>

      <view class="card-wrapper">
        <van-transition show="{{ showCard }}" class="card" name="fade-up">
          <Card :info.sync="targetPOI"></Card>
        </van-transition>
      </view>
    </van-transition>

    <block wx:if="{{showSearchSection}}">
      <block wx:if="{{!searchKeywords.length}}">
        <van-tabs
          class="search-tabs"
          sticky="{{true}}"
          animated
          @click="handleSwitchTab"
          active="{{activeTab}}"
        >
          <van-tab title="区域">
            <scroll-view scroll-x style="width: 100%" scroll-into-view="{{targetAreaTab}}" class="scroll-labels">
              <view class="inner-tabs areas" style="width:{{innerAreasTabsWidth}}px">
                <label
                  wx:for="{{areasKeys}}"
                  wx:key="{{index}}"
                  class="{{targetAreaTab === 'i'+index ? 'active' : ''}}"
                  id="{{'i'+index}}"
                  data-area="{{item}}"
                  @tap="handleSwitchAreasTab"
                >
                  {{item}}
                </label>
              </view>
            </scroll-view>
          </van-tab>
          <van-tab title="物品类型">
            <scroll-view scroll-x style="width: 100%" scroll-into-view="{{targetItemTypeTab}}" class="scroll-labels">
              <view class="inner-tabs item-type" style="width:{{innerItemTypeTabsWidth}}px">
                <label
                  wx:for="{{itemTypeKeys}}"
                  wx:key="{{index}}"
                  class="{{targetItemTypeTab === 'i'+index ? 'active' : ''}}"
                  data-item-type="{{item}}"
                  id="{{'i'+index}}"
                  @tap="handleSwitchItemTypeTab"
                >
                  {{item}}
                </label>
              </view>
            </scroll-view>
          </van-tab>
        </van-tabs>

        <view class="search_results">
          <van-cell-group class="areas" wx:if="{{activeTab === 0}}">
            <block
              wx:for="{{searchList.areas}}"
              wx:if="{{searchList.areas[index].length}}"
              wx:for-item="area"
              wx:key="{{index}}"
            >
              <van-cell
                custom-class="{{item.type}} item"
                wx:for="{{area}}"
                wx:key="{{item._id}}"
                id="{{item._id}}"
                title="{{item.itemName}}"
                value="{{item.time}}"
                label="{{item.desc}}"
                is-link
                @tap="handleClickItem"
                border="{{ false }}"
              >
                <!--<view slot="title">-->
                <!--<view class="van-cell-text">{{item.itemName}}</view>-->
                <!--<van-tag type="{{item.type === 'lost' ? 'danger' : 'primary'}}">{{item.type}}</van-tag>-->
                <!--</view>-->
              </van-cell>
            </block>
          </van-cell-group>

          <van-cell-group class="item-type" wx:else>
            <block
              wx:if="{{searchList.itemType[index].length}}"
              wx:for="{{searchList.itemType}}"
              wx:for-item="itemType"
              wx:key="{{index}}"
            >
              <van-cell
                custom-class="{{item.type}} item"
                wx:for="{{itemType}}"
                wx:key="{{item._id}}"
                id="{{item._id}}"
                title="{{item.itemName}}"
                value="{{item.time}}"
                label="{{item.desc}}"
                is-link
                @tap="handleClickItem"
                border="{{ false }}"
              >
              </van-cell>
            </block>
          </van-cell-group>

          <view wx:if="{{activeTab === 1 && !searchList.itemType[searchListIT[0]].length}}" class="nomore">
            还没有这种东西
          </view>
          <view wx:if="{{activeTab === 0 && !searchList.areas[searchListAreas[0]].length}}" class="nomore">
            这里没有这东西
          </view>

        </view>
      </block>
      <block wx:else>
        <view class="search_results">
          <van-cell-group class="results">
            <van-cell
              custom-class="{{item.type}} item"
              wx:for="{{searchList.result}}"
              wx:key="{{index}}"
              id="{{item._id}}"
              title="{{item.itemName}}"
              value="{{item.time}}"
              label="{{item.desc}}"
              is-link
              @tap="handleClickItem"
              border="{{ false }}"
            >
            </van-cell>
          </van-cell-group>
        </view>
      </block>
    </block>

    <van-popup show="{{ showLeftMenu }}" @close="handleToggleLeftMenu" position="left"
               custom-style="width: 50%;height: 100%;">
      LeftMenu
    </van-popup>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import Card from '../components/card'
  import { areas, itemType } from '../config/map'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '南苑寻物',
      disableScroll: true,
      usingComponents: {
        'van-card': '../components/vant/card/index',
        'van-search': '../components/vant/search/index',
        'van-transition': '../components/vant/transition/index',
        'van-popup': '../components/vant/popup/index',
        'van-tab': '../components/vant/tab/index',
        'van-tabs': '../components/vant/tabs/index',
        'van-cell': '../components/vant/cell/index',
        'van-cell-group': '../components/vant/cell-group/index',
        'van-tag': '../components/vant/tag/index'
      }
    }

    components = {
      Card
    }

    data = {
      isActive: false,
      markers: [],
      targetPOI: null,
      targetAreaTab: null,
      targetItemTypeTab: null,
      showCard: false,
      showSearchSection: false,
      searchKeywords: '',
      activeTab: 0,
      showLeftMenu: false,
      showMapFilter: false,
      selectedFilter: {
        lost: true,
        found: true
      },
      lostMarkers: [],
      foundMarkers: [],
      areas,
      itemType,
      cats: {
        areas: {},
        itemType: {}
      },
      searchList: {
        areas: {},
        itemType: {},
        result: []
      }
    }

    computed = {
      windowWidth() {
        return wx.getSystemInfoSync().windowWidth
      },
      innerAreasTabsWidth() {
        const ak = Object.keys(areas)
        const wd = wx.getSystemInfoSync().windowWidth
        return ak.length * 60 <= wd ? wd : ak.length * 60
      },
      innerItemTypeTabsWidth() {
        const it = Object.keys(itemType)
        const wd = wx.getSystemInfoSync().windowWidth
        return it.length * 60 <= wd ? wd : it.length * 60
      },
      areasKeys() {
        return Object.keys(areas)
      },
      itemTypeKeys() {
        return Object.keys(itemType)
      },
      searchListIT() {
        return Object.keys(this.searchList.itemType)
      },
      searchListAreas() {
        return Object.keys(this.searchList.areas)
      }
    }

    methods = {
      handleMarkerTap(e) {
        for (const i of this.markers) {
          if (i.id === e.markerId) {
            this.targetPOI = i
          }
        }
        this.showCard = true
      },
      handleMapTap() {
        this.showMapFilter = false
        this.isActive = false
      },
      handleToggleAction() {
        this.isActive = !this.isActive
      },
      handleToggleLeftMenu() {
        this.showLeftMenu = !this.showLeftMenu
      },
      handleToggleMapFilter() {
        this.showMapFilter = !this.showMapFilter
      },
      handleClickAction(e) {
        wx.navigateTo({
          url: '/pages/post?type=' + e.target.id
        })
      },
      toggleSelectedFilter(e) {
        if (!e.target.id) return
        if (e.target.id === 'lost') {
          this.selectedFilter.lost = !this.selectedFilter.lost
          !this.selectedFilter.lost ? this.markers = this.foundMarkers : this.markers = this.markers.concat(this.lostMarkers)
          if (!this.selectedFilter.lost && !this.selectedFilter.found) {
            this.markers = []
          }
        } else {
          this.selectedFilter.found = !this.selectedFilter.found
          !this.selectedFilter.found ? this.markers = this.lostMarkers : this.markers = this.markers.concat(this.foundMarkers)
          if (!this.selectedFilter.lost && !this.selectedFilter.found) {
            this.markers = []
          }
        }
      },
      showSearchSection() {
        this.showSearchSection = true
        wx.hideTabBar({
          animation: true
        })
      },
      handleSearchCancel() {
        this.showSearchSection = false
        this.searchKeywords = ''
        wx.showTabBar({
          animation: true
        })
      },
      handleSearchInput(e) {
        this.searchList.result = []
        this.searchKeywords = e.detail
        for (const i of this.markers) {
          if (i.itemName.includes(e.detail) || i.itemType.includes(e.detail) || i.area.includes(e.detail)) {
            this.searchList.result.push(i)
          }
        }
      },
      handleSwitchTab(e) {
        this.activeTab = e.detail.index
        if (e.detail.index === 0) {
          this.searchList.areas = this.cats.areas
          this.targetAreaTab = ''
        } else {
          this.searchList.itemType = this.cats.itemType
          this.targetItemTypeTab = ''
        }
      },
      handleSwitchAreasTab(e) {
        this.targetAreaTab = e.target.id
        const key = e.currentTarget.dataset.area
        this.searchList.areas = {}
        this.searchList.areas[key] = this.cats.areas[key]
      },
      handleSwitchItemTypeTab(e) {
        this.targetItemTypeTab = e.target.id
        const key = e.currentTarget.dataset.itemType
        this.searchList.itemType = {}
        this.searchList.itemType[key] = this.cats.itemType[key]
      },
      handleClickItem(e) {
        wx.navigateTo({
          url: '/pages/detail?id=' + e.target.id
        })
      }
    }

    onLoad() {
      const self = this
      this.$parent.loadData().then(res => {
        self.markers = res.markers
        self.lostMarkers = res.lostMarkers
        self.foundMarkers = res.foundMarkers
        self.$apply()
        this.setPOICat()
      })
    }

    setPOICat() {
      for (const i of Object.keys(areas)) {
        this.cats.areas[i] = []
        for (const j of this.markers) {
          if (j.area[0] === i) {
            this.cats.areas[i].push(j)
          }
        }
      }
      for (const i of Object.keys(itemType)) {
        this.cats.itemType[i] = []
        for (const j of this.markers) {
          if (j.itemType === i) {
            this.cats.itemType[i].push(j)
          }
        }
      }
      this.searchList.areas = this.cats.areas
      this.searchList.itemType = this.cats.itemType
    }
  }
</script>

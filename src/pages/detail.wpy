<style lang="less">
  @import "../style/custom";

  swiper {
    height: 480rpx;

    swiper-item {
      image {
        width: 100%;
        height: 100%;
      }
    }
  }

  .detail {
    .place {
      color: @foundColor;
    }
    &.lost {
      .place {
        color: @lostColor;
      }
    }
    .content-wrapper {
      padding: 26rpx;
      font-size: 14px;
      .place {
        font-size: 120%;
      }
    }
  }
</style>
<template>
  <view>
    <view class="header">
      <swiper
        indicator-dots="{{itemData.images.length > 1}}"
        autoplay="{{true}}"
        interval="{{3000}}"
        duration="{{500}}"
      >
        <block wx:for="{{itemData.images}}" wx:key="{{index}}">
          <swiper-item>
            <image src="{{item}}" class="slide-image"/>
          </swiper-item>
        </block>
      </swiper>
    </view>

    <view class="detail {{itemData.type === 'lost' ? 'lost' : 'found'}}">
      <van-panel
        title="{{itemData.itemName}}"
        desc="{{itemData.desc}}"
      >
        <view class="content-wrapper">
          <span class="time">{{itemData.fullTime}}在</span>
          <span class="place"
                @tap="handlePopupMap">{{itemData.area[0] + (itemData.area[1] !== '其他' ? itemData.area[1] : '')}}</span>
          <span class="action">{{itemData.type === 'lost' ? '丢失' : '捡到'}}</span>
        </view>
      </van-panel>
    </view>

  <block wx:if="{{itemData.status === 0}}">
    <van-button
      open-type='share'
      plain
      size="large"
      type="default"
    >
      分享
    </van-button>

    <van-button
      plain
      size="large"
      loading="{{loading}}"
      type="{{action[0] !== '关闭' ? 'primary' : 'warning'}}"
      @tap="{{action[0] !== '关闭' ? 'handleMakePhoneCall' : 'handleClosePOI'}}">
      <van-icon name="{{action[1]}}"></van-icon>
      {{action[0]}}
    </van-button>
  </block>

    <van-popup show="{{ showMap }}" @close="handlePopupMap">
      <map
        id="map"
        longitude="{{itemData.longitude}}"
        latitude="{{itemData.latitude}}"
        scale="18"
        show-location
        enable-rotate="{{true}}"
        enable-3D="{{true}}"
        markers="{{[itemData]}}"
        circles="{{circles}}"
        style="width: 80vw; height: 680rpx;"
      ></map>
    </van-popup>
    <van-toast id="van-toast"/>
    <van-dialog id="van-dialog" />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Toast from '../components/vant/toast/toast'
  import Dialog from '../components/vant/dialog/dialog'
  import { circlesStyle, markersStyle } from '../config/map'
  import { format2FullTime, format2RelativeTime } from '../utils/format_time'

  export default class Detail extends wepy.page {
    config = {
      navigationBarTitleText: '详情',
      disableScroll: true,
      usingComponents: {
        'van-panel': '../components/vant/panel/index',
        'van-button': '../components/vant/button/index',
        'van-popup': '../components/vant/popup/index',
        'van-icon': '../components/vant/icon/index',
        'van-toast': '../components/vant/toast/index',
        'van-dialog': '../components/vant/dialog/index'
      }
    }

    data = {
      itemData: null,
      circles: [{
        latitude: null,
        longitude: null,
        radius: 10,
        color: circlesStyle.lostColor,
        fillColor: circlesStyle.lostColor,
        strokeWidth: circlesStyle.strokeWidth
      }],
      showMap: false,
      openid: null,
      loading: false
    }

    computed = {
      action() {
        if (!this.itemData) return false
        if (this.itemData._openid === this.openid) {
          return ['关闭', 'close']
        } else {
          return this.itemData.type === 'lost' ? ['告知', 'phone-o'] : ['认领', 'phone-o']
        }
      }
    }

    methods = {
      handlePopupMap() {
        this.showMap = !this.showMap
      },
      handleMakePhoneCall() {
        wx.makePhoneCall({
          phoneNumber: this.itemData.contact.phone
        })
      },
      handleClosePOI() {
        this.loading = true
        const self = this
        Dialog.confirm({
          title: '关闭确认',
          message: '是否关闭当前发布？'
        }).then(() => {
          // on confirm
          const db = wx.cloud.database()
          db.collection('items').doc(self.itemData._id).update({
            data: {
              status: 1
            },
            success() {
              self.loading = false
              self.$apply()
              Toast.success('关闭成功')
              setTimeout(() => {
                wx.reLaunch({
                  url: './index'
                })
              }, 1500)
            }
          })
        }).catch(() => {
          // on cancel
          self.loading = false
          self.$apply()
        })
      }
    }

    onLoad(options) {
      const self = this
      if (options.source === 'share' || options.status === '1') {
        wx.cloud.callFunction({
          name: 'getItemById',
          data: {
            id: options.id
          },
          success(res) {
            let result = res.result.data
            result = Object.assign(result, {
              reportedTime: format2RelativeTime(result.reportedTime),
              time: format2FullTime(result.time),
              latitude: result.location.coordinates[1],
              longitude: result.location.coordinates[0],
              width: markersStyle.width,
              height: markersStyle.height,
              fullTime: format2RelativeTime(result.time) + `（${format2FullTime(result.time)}）`,
              iconPath: result.type === 'lost' ? '/images/icon/location.png' : '/images/icon/location@found.png',
              label: Object.assign({ content: result.itemType !== '其他' ? result.itemType : result.itemName }, markersStyle.label)
            })
            self.circles[0].latitude = result.latitude
            self.circles[0].longitude = result.longitude
            self.circles[0].radius = result.area[2]
            self.circles[0].fillColor = result.type === 'lost' ? circlesStyle.lostColor + '80' : circlesStyle.foundColor + '80'
            self.circles[0].color = result.type === 'lost' ? circlesStyle.lostColor + '50' : circlesStyle.foundColor + '50'
            self.itemData = result
            self.$apply()
          }
        })
        return
      }
      const openid = wx.getStorageSync('openid')
      if (!openid) {
        wx.cloud.callFunction({
          name: 'getOpenId',
          complete(res) {
            wx.setStorage({
              key: 'openid',
              data: res.result.openid
            })
            self.openid = res.result.openid
            self.$apply()
          }
        })
      } else {
        self.openid = openid
      }
      for (const i of this.$parent.globalData.mapData.markers) {
        if (i.id === options.id) {
          this.itemData = i
          this.circles[0].latitude = i.latitude
          this.circles[0].longitude = i.longitude
          this.circles[0].radius = i.area[2]
          this.circles[0].fillColor = i.type === 'lost' ? circlesStyle.lostColor + '80' : circlesStyle.foundColor + '80'
          this.circles[0].color = i.type === 'lost' ? circlesStyle.lostColor + '50' : circlesStyle.foundColor + '50'
          break
        }
      }
    }

    onShareAppMessage () {
      return {
        title: '南苑寻物',
        desc: '你是不是丢了什么东西？',
        path: `/pages/detail?id=${this.itemData._id}&source=share`
      }
    }
  }
</script>

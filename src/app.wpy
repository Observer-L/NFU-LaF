<style lang="less">
  @import "style/index";
  @import "../src/components/vant/common/index.wxss";
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  import db from './utils/db'
  import Login from './utils/login'
  import { format2FullTime, format2RelativeTime, formatRFC2822ToCalendar } from './utils/format_time'
  import Http from './utils/http'
  import { markersStyle } from './config/map'

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/post',
        'pages/detail',
        'pages/about',
        'pages/privacy',
        'pages/contact',
        'pages/history',
        'pages/my',
        'pages/corner'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '南苑寻物',
        navigationBarTextStyle: 'black'
      },
      tabBar: {
        selectedColor: '#f06292',
        color: '#707070',
        list: [
          {
            pagePath: 'pages/index',
            text: '寻物',
            iconPath: '/images/icon/home.png',
            selectedIconPath: '/images/icon/home@select.png'
          },
          // {
          //   pagePath: 'pages/corner',
          //   text: '角落',
          //   iconPath: '/images/icon/corner.png',
          //   selectedIconPath: '/images/icon/corner@select.png'
          // },
          {
            pagePath: 'pages/my',
            text: '个人中心',
            iconPath: '/images/icon/user.png',
            selectedIconPath: '/images/icon/user@select.png'
          }
        ]
      }
    }

    globalData = {
      userInfo: null,
      mapData: [],
      lostMarkers: [],
      foundMarkers: []
    }

    constructor() {
      super()
      this.use('requestfix')
    }

    onLaunch() {
      new Login().getToken().then(() => {
        this.globalData.userInfo = db.Get('userInfo')
      })
      this.loadMapData()
    }

    async loadMapData() {
      this.globalData.mapData = []
      const resp = await Http.Get('items')
      const mapData = resp.data
      for (let i = 0; i < mapData.length; i++) {
        for (let j = 0; j < mapData[i].data.length; j++) {
          const POI = mapData[i].data[j]
          POI.width = markersStyle.width
          POI.height = markersStyle.height
          POI.type = mapData[i].type
          POI.iconPath = POI.type === 'LOST' ? '/images/icon/location.png' : '/images/icon/location@found.png'
          POI.label = Object.assign({ content: POI.itemType !== '其他' ? POI.itemType : POI.itemDetail.name }, markersStyle.label)
          POI.itemDetail.fullTime = format2RelativeTime(POI.itemDetail.time) + `（${format2FullTime(POI.itemDetail.time)}）`
          POI.itemDetail.time = format2RelativeTime(POI.itemDetail.time)
          POI.itemDetail.reportedTime = formatRFC2822ToCalendar(POI.itemDetail.reportedTime)
          this.globalData.mapData.push(POI)
        }
      }
      for (const i of this.globalData.mapData) {
        i.type === 'LOST' ? this.globalData.lostMarkers.push(i) : this.globalData.foundMarkers.push(i)
      }
    }
  }
</script>
